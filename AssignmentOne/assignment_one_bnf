<program> ::= <identifier> ":" <block> ENDP <identifier> "."

<block> ::= DECLARATIONS <declaration_block> CODE <statement_list> | CODE <statement_list>

<declaration_block> ::= <identifier> OF TYPE <type> ";" | <identifier> "," <declaration_block> | <identifier> OF TYPE <type> ";" <declaration_block>

<type> ::= CHARACTER | INTEGER | REAL

<statement_list> ::= <statement> | <statement> ";" <statement_list>

<statement> ::= <assignment_statement> | <if_statement> | <do_statement> | <while_statement> | <for_statement> | <write_statement> | <read_statement>

<assignment_statement> ::= <expression> "->" <identifier>

<if_statement> ::= IF <conditional> THEN <statement_list> ENDIF | IF <conditional> THEN <statement_list> ELSE <statement_list> ENDIF

<do_statement> ::= DO <statement_list> WHILE <conditional> ENDDO

<while_statement> ::= WHILE <conditional> DO <statement_list> ENDWHILE

<for_statement> ::= FOR <identifier> IS <expression> BY <expression> TO <expression> DO <statement_list> ENDFOR

<wirte_statement> ::= NEWLINE | WRITE "(" <output_list> ")"

<read_statement> ::= READ "(" <identifier> ")"

<output_list> ::= <value> | <output_list> "," <value>

<conditional> ::= <expression> <comparator> <expression> | NOT <conditional> | <conditional> AND <conditional> | <conditional> OR <conditional>

<comparator> ::= "=" | "<>" | "<" | ">" | "<=" | ">="

<expression> ::= <term> | <expression> "+" <term> | <expression> "-" <term>

<term> ::= <value> | <term> "*" <value> | <term> "/" <value>

<value> ::= <identifier> | <constant> | "(" <expression> ")"

<constant> ::= <number_constant> | <character_constant>

<character_constant> ::= "'" <character> "'"

/////////////////////////////////////
// I am unsure if this would work as it would allow 12.-12 or -12.-213
<number_constant> ::= <digit> | <number_constant> <digit> | "-" <number_constant> | <number_constant> "." <number_constant>

// I think this would get around the above issue but requires me to introduce <unsigned_integer> is this okay?
<number_constant> ::= <unsigned_integer> | "-" <unsigned_integer> | <number_constant> "." <unsigned_integer>
<unsigned_integer> ::= <digit> | <unsigned_integer> <digit>
/////////////////////////////////////

<identifier> ::= <character> | <identifier> <digit>  | <identifier> <character>

<character> ::= A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z | a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z

<digit> ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9
